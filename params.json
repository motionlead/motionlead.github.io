{"name":"Motionlead.github.io","tagline":"","body":"# MotionLead iOS Integration\r\n\r\n## Table of contents\r\n\r\n1. **[Getting the SDK](#getsdk)**\r\n2. **[Adding the SDK to your project](#addsdk)**  \r\n3. **[Integrating the SDK](#integratesdk)**\r\n4. **[Headers](#headers)**\r\n\r\n## Getting the SDK <a name=\"getsdk\"></a>\r\n\r\n<!---<del>Contact us at <engineering@motionlead.com> to get a copy of the SDK.</del>-->\r\n\r\nThe SDK is currently available to a restricted number of publishers.\r\n\r\n## Adding the SDK to your project <a name=\"addsdk\"></a>\r\n\r\n### Step 1: Add the framework to your project\r\n\r\nSimply drag and drop the folder `MotionLead.framework` into your Project Navigator ([how?](http://motionlead.github.io/images/draganddrop.gif)).\r\n\r\n> Make sure to select _Copy items into destination group's folder (if needed)_.\r\n\r\n### Step 2: Link with the dependencies\r\n\r\nThe MotionLead iOS SDK need to be linked with some frameworks ([how?](https://developer.apple.com/library/ios/recipes/xcode_help-project_editor/Articles/AddingaLibrarytoaTarget.html)). To do so click on  _Build Phases_. In the _Link Binary With Libraries_ section add the the following frameworks :\r\n\r\n+ libz.dylib\r\n+ AdSupport.framework\r\n+ CoreMotion.framework\r\n+ CoreTelephony.framework\r\n+ QuartzCore.framework\r\n+ StoreKit.framework\r\n+ SystemConfiguration.framework\r\n\r\n> If your app need to be compatible with iOS versions prior to 6.0, set the _AdSupport.framework_ as optional ([how?](http://motionlead.github.io/images/optional.gif)).\r\n\r\n### Step 3: Modify the _Build Settings_\r\n\r\nClick on _Build Settings_, select the _All_ tab then search for _Other Linker Flags_. Double click on it and add the flag **`-ObjC`** ([how?](http://motionlead.github.io/images/otherlinkerflag.png)).\r\n\r\n> Make sure to write `-ObjC` and not `-Objc` or `-objc`, the case is important.\r\n\r\n### Step 4: Build your app\r\n\r\nBuild your app to make sure that your project is configured properly.\r\n\r\n> If you are unable to build the app after adding the MotionLead SDK, head to our [FAQ](https://motionlead.github.io/faq.html).\r\n\r\n---\r\n\r\n## Integrating the SDK <a name=\"integratesdk\"></a>\r\n\r\nThe main object of the MotionLead iOS SDK is the `MLView`. This class is a subclass of `UIView` and allows you to display animated ads throughout your application.\r\n\r\n### Usage\r\n\r\n+ Import the MotionLead framework\r\n```objective-c\r\n#import <MotionLead/MotionLead.h>\r\n```\r\n\r\n+ Create a property holding the `MLView` instance and add the `MLViewDelegate` protocol\r\n```objective-c\r\n@interface ViewController : UIViewController <MLViewDelegate>\r\n@property (strong, nonatomic)   MLView  *adView;\r\n@end\r\n```\r\n\r\n+ Initialize `self.adView` by replacing `PUBLISHER_KEY` with the key provided for your app and set the delegate.\r\n```objective-c.\r\nself.adView = [[MLView alloc] initWithPublisherKey:@\"PUBLISHER_KEY\" frame:self.view.bounds];\r\nself.adView.delegate = self;\r\n```\r\n\r\n> If your app support auto-rotation add:\r\n> `self.adView.autoresizingMask = UIViewAutoresizingFlexibleWidth | UIViewAutoresizingFlexibleHeight;`\r\n\r\n+ Add `self.adView` to the view hierarchy\r\n```objective-c\r\nif (self.navigationController.view) {\r\n    [self.navigationController.view addSubview:self.adView];\r\n} else {\r\n    [self.view addSubview:self.adView];\r\n}\r\n```\r\n\r\n+ To load an ad, call:\r\n```objective-c\r\n[self.adView loadAd];\r\n```\r\n\r\n> Once the ad is loaded, the SDK will call the delegate's `mlViewDidLoadAd:`.\r\n\r\n+ To display an ad, call:\r\n```objective-c\r\n[self.adView displayAd];\r\n```\r\n\r\n> If no ad has been downloaded, this call does nothing.\r\n\r\n### MLView Delegate\r\n\r\nIn order to respond to changes in the state of the ad you should implement `MLViewDelegate` protocol methods.\r\n\r\n#### Examples <a name=\"Examples\"></a>\r\n\r\nTo display the ad right after it has been downloaded, write the following in your class:\r\n```objective-c\r\n- (void)mlViewDidLoadAd:(MLView *)view {\r\n    [view displayAd];\r\n}\r\n```\r\n\r\nTo download a new ad right after the previous ad finished running:\r\n```objective-c\r\n- (void)mlViewDidFinishAd:(MLView *)view {\r\n    [view loadAd];\r\n}\r\n```\r\n\r\nTo be notified when the user will exit the app after clicking the ad:\r\n```objective-c\r\n- (void)willLeaveApplicationFromMLView:(MLView *)view {\r\n    // Save data, pause game, ...\r\n}\r\n```\r\n\r\n## Headers <a name=\"headers\"></a>\r\n\r\nThe headers are fully documented, don't hesitate to take a look for more precisions about a method","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}